{"version":3,"sources":["reportWebVitals.js","components/LogoHeader/VegaInvestLogo.png","components/LogoHeader/LogoHeader.js","components/LoginForm/Login.js","pages/LoginPg/LoginPg.js","components/UserPWForm/UserPWForm.js","pages/CreateUser/CreateUser.js","components/userqone/userqone.js","pages/questionnaire/questionnaire.js","components/Dashhead/VegaLogoCon.jpeg","components/Dashhead/Dashhead.js","components/PortfolioGraph/PortfolioGraph.js","components/Footer/Footer.js","components/Keyportfacts/Keyportfacts.jsx","pages/Dashboard/Dashboard.js","components/Porthead/Porthead.js","components/ETF_table/ETF_table.js","pages/PortfolioSum/PortfolioSum.js","components/edituserqone/edituserqone.js","pages/editquestionnaire/editquestionnaire.js","pages/LoadingDet/LoadingDet.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LogoHeader","className","alt","src","Vegalogo","height","width","Login","useState","email","password","values","setValues","error","setError","getPostMessage","setGetPostMessage","navigate","useNavigate","useEffect","Status","state","onChange","event","target","value","type","placeholder","name","id","Button","onClick","axios","post","url","response","data","console","log","catch","variant","to","style","textDecoration","color","LoginPg","UserPwForm","confirmpassword","Errormsg","setErrormsg","CreateUser","Userqone","useLocation","amount_invest","goal","horizon","risk_appetite","pvalues","setpvalues","isNaN","parseInt","Questionnaire","Dashhead","DropdownButton","title","Dropdown","Item","href","Plot","createPlotlyComponent","Plotly","PortfolioGraph","getMessage","setGetMessage","fullurl","get","date_vector","portval","x","y","hovertemplate","line","marker","size","fill","layout","margin","l","r","b","t","pad","text","lastportval","titlefont","family","paper_bgcolor","plot_bgcolor","font_color","xaxis","tickfont","showgrid","autorange","rangeselector","buttons","count","label","step","stepmode","yaxis","range","tickprefix","tickformat","side","Footer","Keyportfacts","HorzProgress","time_difference","GoalProgress","marginLeft","ProgressBar","marginTop","now","Dashboard","rtotal","amount_invested","Table","striped","bordered","hover","Math","round","returns","vol","sharpe","Porthead","ETF_table","weights","background","description","weight","map","ETF","index","ticker","PortfolioSum","Edituserqone","setpValues","Editquestionnaire","LoadingDet","Box","sx","display","CircularProgress","ReactDOM","render","StrictMode","path","exact","element","document","getElementById"],"mappings":"kfAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,eCPC,G,OAAA,IAA0B,4C,gBCc1BQ,EAVI,WAEnB,OAEI,qBAAKC,UAAU,aAAf,SACC,qBAAKC,IAAI,OAAOC,IAAKC,EAAUC,OAAO,QAAQC,MAAM,a,wDCkG1CC,EAlGD,WAEd,MAA4BC,mBACxB,CACAC,MAAO,GACPC,SAAU,KAHd,mBAAOC,EAAP,KAAeC,EAAf,KAQA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEA,EAA4CN,mBAAS,IAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KASIC,EAAWC,cAEfC,qBAAU,WACqB,SAAvBJ,EAAeK,OACfH,EAAS,eACT,CACII,MAAO,CACLV,YAMNG,EAASC,EAAeK,UAI7B,CAACL,IAgBJ,OAEI,sBAAKd,UAAU,kBAAf,UACI,qBAAKA,UAAU,cAAf,oCAGA,qBAAKA,UAAU,OAAf,SAEA,uBAAMA,UAAU,aAAhB,UACI,uBACAqB,SAlDc,SAACC,GACvBX,EAAU,2BAAID,GAAL,IAAaF,MAAOc,EAAMC,OAAOC,UAkDlCC,KAAK,QACLD,MAAOd,EAAOF,MACdR,UAAU,aACV0B,YAAY,mBACZC,KAAK,UAEL,uBACA,uBACAN,SAxDsB,SAACC,GAC/BX,EAAU,2BAAID,GAAL,IAAaD,SAAUa,EAAMC,OAAOC,UAwDrCd,OAAQA,EAAOD,SACfT,UAAU,aACVyB,KAAK,WACLC,YAAY,sBACZC,KAAK,aAEL,uBACJ,sBAAKC,GAAG,eAAR,cAAyBhB,EAAzB,OACA,uBAEA,cAACiB,EAAA,EAAD,CAAQC,QA3CK,WAGjBC,IAAMC,KADOC,+CACOvB,GAAQjB,MAAK,SAAAyC,GAC7BnB,EAAkBmB,EAASC,MAC3BC,QAAQC,IAAIH,EAASC,SACpBG,OAAM,SAAA1B,GACPwB,QAAQC,IAAIzB,OAoCkB2B,QAAQ,YAAYvC,UAAU,WAAW4B,GAAG,WAA1E,sBACA,uBACA,cAAC,IAAD,CAAMY,GAAG,cAAcC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,SAA/D,SACA,cAACd,EAAA,EAAD,CAAQU,QAAQ,OAAOvC,UAAU,WAAW4B,GAAG,SAA/C,gCC/EOgB,MAZf,WACE,OACE,sBAAK5C,UAAU,UAAf,UAEE,cAAC,EAAD,IAEA,cAAC,EAAD,QCwGS6C,G,cA3GI,WAEnB,MAA4BtC,mBACxB,CACAC,MAAO,GACPC,SAAU,GACVqC,gBAAiB,KAJrB,mBAAOpC,EAAP,KAAeC,EAAf,KAQA,EAA+BJ,mBAAS,IAAxC,mBAAOwC,EAAP,KAAgBC,EAAhB,KAcA,EAA4CzC,mBAAS,IAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEIC,EAAWC,cAEfC,qBAAU,WACqB,cAAvBJ,EAAeK,QACfiB,QAAQC,IAAI,UACZrB,EAAS,cACT,CACII,MAAO,CACLV,aAKNsC,EAAYlC,EAAeK,UAIhC,CAACL,IAmBJ,OAEI,sBAAKd,UAAU,uBAAf,UACI,qBAAKA,UAAU,mBAAf,yCAGA,qBAAKA,UAAU,OAAf,SACA,uBAAMA,UAAU,cAAhB,UACI,uBACAqB,SA3Dc,SAACC,GACvBX,EAAU,2BAAID,GAAL,IAAaF,MAAOc,EAAMC,OAAOC,UA2DlCC,KAAK,QACLD,MAAOd,EAAOF,MACdR,UAAU,aACV0B,YAAY,mBACZC,KAAK,UAEL,uBACA,uBACAN,SAhEsB,SAACC,GAC/BX,EAAU,2BAAID,GAAL,IAAaD,SAAUa,EAAMC,OAAOC,UAgErCA,MAAOd,EAAOD,SACdT,UAAU,aACV0B,YAAY,mBACZC,KAAK,WACLF,KAAK,aAEL,uBACA,uBACAJ,SArE6B,SAACC,GACtCX,EAAU,2BAAID,GAAL,IAAaoC,gBAAiBxB,EAAMC,OAAOC,UAqE5CA,MAAOd,EAAOoC,gBACd9C,UAAU,aACV0B,YAAY,mBACZC,KAAK,kBACLF,KAAK,aAEL,uBACA,sBAAKzB,UAAU,aAAf,cAA8B+C,EAA9B,OACA,uBACA,cAAClB,EAAA,EAAD,CAAQC,QAtDG,WACnB,GAAIpB,EAAOD,UAAUC,EAAOoC,gBAAgB,CAI5Cf,IAAMC,KAFOC,kDAEOvB,GAAQjB,MAAK,SAAAyC,GAC7BnB,EAAkBmB,EAASC,MAC3BC,QAAQC,IAAIH,EAASC,SACpBG,OAAM,SAAA1B,GACPwB,QAAQC,IAAIzB,WAIZwB,QAAQC,IAAI,yBACZW,EAAY,2BAwCyBT,QAAQ,YAAYvC,UAAU,YAA/D,yCC7FGiD,MAVf,WACE,OACE,sBAAKjD,UAAU,aAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,QCiJSkD,G,OAnJE,SAACxC,GAChB,IAAMc,EAAQ2B,cAAc/B,MAAMV,OAAOF,MACzC,EAA8BD,mBAC5B,CACAC,MAAOgB,EACP4B,cAAe,GACfC,KAAM,GACNC,QAAS,GACTC,cAAe,KANjB,mBAAOC,EAAP,KAAgBC,EAAhB,KAaF,EAA+BlD,mBAAS,IAAxC,mBAAOwC,EAAP,KAAgBC,EAAhB,KAiBIhC,EAAWC,cA4Df,OACE,+BACD,sBAAKjB,UAAU,cAAf,UACA,qBAAKA,UAAU,WAAf,gEAGD,sBAAKA,UAAU,MAAMqB,SAvEF,SAACC,GAClBmC,EAAW,2BAAID,GAAL,IAAcD,cAAejC,EAAMC,OAAOC,UAsEtD,UACQ,uBAAOC,KAAK,QAAQD,MAAM,OAAOG,KAAK,SAD9C,sBAEQ,uBACA,uBAAOF,KAAK,QAAQD,MAAM,SAASG,KAAK,SAHhD,wCAIQ,uBACA,uBAAOF,KAAK,QAAQD,MAAM,MAAMG,KAAK,SAL7C,sCAMQ,0BAIR,qBAAK3B,UAAU,WAAf,gDAGE,uBACUqB,SAzFqB,SAACC,GAC9BmC,EAAW,2BAAID,GAAL,IAAcJ,cAAe9B,EAAMC,OAAOC,UAyF5CA,MAAOgC,EAAQJ,cACfpD,UAAU,YACV0B,YAAc,wBACdC,KAAK,kBAEd,qBAAK3B,UAAU,WAAf,8CAGF,uBACWqB,SAzGa,SAACC,GACtBmC,EAAW,2BAAID,GAAL,IAAcH,KAAM/B,EAAMC,OAAOC,UAyGnCA,MAAOgC,EAAQH,KACfrD,UAAU,YACV0B,YAAY,sBACZC,KAAK,SAEf,qBAAK3B,UAAU,WAAf,iDAGE,uBACQqB,SAhHgB,SAACC,GACzBmC,EAAW,2BAAID,GAAL,IAAcF,QAAShC,EAAMC,OAAOC,UAgHtCA,MAAOgC,EAAQF,QACftD,UAAU,YACV0B,YAAY,6BACZC,KAAK,YAEf,sBAAK3B,UAAU,SAAf,cAA0B+C,EAA1B,OAEF,cAAClB,EAAA,EAAD,CAAQC,QA5FgB,WAElB4B,MAAMC,SAASH,EAAQF,UACzBN,EAAY,oBAELU,MAAMC,SAASH,EAAQH,OAC9BL,EAAY,iBAELU,MAAMC,SAASH,EAAQJ,iBAGvBO,SAASH,EAAQJ,gBAAgB,EAFxCJ,EAAY,4BAKLW,SAASH,EAAQH,OAAO,EAC/BL,EAAY,iBAELW,SAASH,EAAQF,UAAU,EAClCN,EAAY,oBAELW,SAASH,EAAQH,OAASM,SAASH,EAAQJ,eAClDJ,EAAY,qCAEmB,KAAxBQ,EAAQD,cACfP,EAAY,kCAGdZ,QAAQC,IAAI,cAEZrB,EAAS,aACH,CACEI,MAAOoC,MA6DkBjB,QAAQ,YAAYvC,UAAU,OAAjE,uCCpIe4D,EAXO,WAEtB,OACC,gCACE,cAAC,EAAD,IAEA,cAAC,EAAD,Q,gBCVY,MAA0B,yC,0BCmC1BC,EA3BE,WAAO,IAAD,EAEjBrD,EAAQ2C,cAAc/B,MAAMV,OAAOF,MACrCQ,EAAWC,cAQf,OACI,sBAAKjB,UAAU,WAAf,UACE,8BACD,qBAAKC,IAAI,OAAOC,IAAKC,EAAUC,OAAO,OAAOC,MAAM,WAEnD,8BACA,eAACyD,EAAA,GAAD,GAAgBlC,GAAG,wBAAwBmC,MAAOvD,GAAlD,mBAA4D,WAA5D,wBAA8E,aAA9E,0BAED,cAACwD,EAAA,EAASC,KAAV,CAAeC,KAAK,IAApB,uBACA,cAACF,EAAA,EAASC,KAAV,CAAgBnC,QAfH,WACbd,EAAS,kBACL,CACII,MAAO,CAACZ,YAYhB,yCAHC,U,kCCnBC2D,G,OAAOC,IAAsBC,MAiGhBC,EA/FI,WAErB,IAAM9D,EAAQ2C,cAAc/B,MAAMV,OAAOF,MACzC,EAAoCD,mBAAS,IAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KAcE,OAbFtD,qBAAU,WACR,IACIuD,EAASxC,0DAAiCzB,EAC9CuB,IAAM2C,IAAID,GAAShF,MAAK,SAAAyC,GACpBE,QAAQC,IAAI,WACZD,QAAQC,IAAIH,EAASC,MACrBqC,EAActC,EAASC,SACtBG,OAAM,SAAA1B,GACPwB,QAAQC,IAAIzB,QAEf,IACFwB,QAAQC,IAAIkC,EAAWI,aACvBvC,QAAQC,IAAIkC,EAAWK,SAGlB,qBAAK5E,UAAU,iBAAf,SACI,cAACmE,EAAD,CAAMnE,UAAU,OAChBmC,KAAM,CACF,CAEA0C,EAAGN,EAAWI,YACdG,EAAGP,EAAWK,QACdG,cAAgB,mCAChBtD,KAAM,SACNuD,KAAK,CAAC3E,MAAM,EAAEsC,MAAM,WACpBsC,OAAQ,CAAEC,KAAM,EAAGvC,MAAM,UAAWqC,KAAK,CAAC3E,MAAM,EAAEsC,MAAM,SACxDwC,KAAM,YAEVC,OAAQ,CACNC,OAAO,CAACC,EAAE,EAAGC,EAAE,EAAGC,EAAE,GAAIC,EAAE,GAAIC,IAAI,GAChC3B,MAAM,CAAC4B,KAAK,oBAAoBpB,EAAWqB,aAC3CC,UAAU,CAACX,KAAK,GAAGY,OAAO,cAAcnD,MAAM,SAC9CtC,MAAO,MACPD,OAAQ,IACR2F,cAAc,QACdC,aAAa,QACbC,WAAW,QACXC,MAAO,CACLC,SAAS,CAACxD,MAAM,gBAAgBuC,KAAK,IACrCkB,UAAS,EACTC,WAAW,EACXC,cAAe,CACXxB,GAAG,KACHD,EAAE,IACF0B,QAAS,CACT,CACExC,MAAM,UACNyC,MAAO,EACPC,MAAO,KACPC,KAAM,QACNC,SAAU,YAEZ,CACEH,MAAO,EACPC,MAAO,KACPC,KAAM,QACNC,SAAU,YAZH,aAePH,MAAO,EACPC,MAAO,MACPC,KAAM,OACNC,SAAU,UAlBH,QAmBA,GAET,CACEH,MAAO,GACPC,MAAO,KACPC,KAAM,QACNC,SAAU,YAEZ,CAACD,KAAM,MACLD,MAAO,MACRE,SAAS,cAEZlF,KAAK,QAETmF,MAAO,CACLT,SAAS,CAACxD,MAAM,gBAAgBuC,KAAK,IACrCkB,UAAS,EACTC,WAAW,EACXQ,MAAO,CAAC,cAAe,eACvBC,WAAW,IACXC,WAAW,KACXC,KAAK,eCnFRC,G,OAVA,WAEf,OAEI,aADJ,CACI,OAAKjH,UAAU,SAAf,sB,yBCqEWkH,EApEM,WAErB,IAAM1G,EAAQ2C,cAAc/B,MAAMV,OAAOF,MACzC,EAAoCD,mBAAS,IAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KAEAtD,qBAAU,WACiB,WAAnBqD,EAAWpD,QACXiB,QAAQC,IAAI,YAGjB,CAACmC,IAEJtD,qBAAU,WACN,IACIuD,EAASxC,0DAAiCzB,EAC9CuB,IAAM2C,IAAID,GAAShF,MAAK,SAAAyC,GACpBE,QAAQC,IAAI,WACZD,QAAQC,IAAIH,EAASC,MACrBqC,EAActC,EAASC,SACtBG,OAAM,SAAA1B,GACPwB,QAAQC,IAAIzB,QAEf,IACL,IAAMuG,EAAc5C,EAAW6C,gBAAgB7C,EAAWjB,QAAS,IAC7D+D,EAAc9C,EAAWqB,YAAYrB,EAAWlB,KAAM,IACxDrC,EAAWC,cAef,OAEI,sBAAKjB,UAAU,eAAf,UACI,qBAAKA,WAAS,EAAd,SACI,qBAAKA,UAAU,QAAf,mCAIJ,sBAAKA,UAAU,SAAf,UACI,wBAAQyC,MAAO,CAACpC,MAAO,QAASiH,WAAW,QAA3C,mCADJ,IACuF,oCAAM,cAACC,EAAA,EAAD,CAAa9E,MAAO,CAACpC,MAAO,QAASmH,UAAW,OAAQC,IAAKN,IAAnE,OADvF,KACmL,sBAAK1E,MAAO,CAACpC,MAAO,OAAQiH,WAAW,QAAvC,cAAkD/C,EAAWjB,QAA7D,gBAEnL,sBAAKtD,UAAU,SAAf,UACI,wBAAQyC,MAAO,CAACpC,MAAO,QAASiH,WAAY,QAA5C,gCADJ,IACqF,oCAAM,cAACC,EAAA,EAAD,CAAa9E,MAAO,CAACpC,MAAO,QAASmH,UAAW,OAAQC,IAAKJ,IAAnE,OADrF,KACiL,sBAAK5E,MAAO,CAACpC,MAAO,OAAQiH,WAAY,QAAxC,eAAoD/C,EAAWlB,KAA/D,UAGjL,qBAAKrD,UAAU,SAAf,SACA,mDAAsBuE,EAAWhB,mBAEjC,sBAAKvD,UAAU,SAAf,UAEI,cAAC6B,EAAA,EAAD,CAAQD,GAAG,aAAaE,QAlCpB,WACZd,EAAS,kBACL,CACII,MAAO,CAACZ,YA+BkC+B,QAAQ,UAAlD,uCACA,cAACV,EAAA,EAAD,CAAQC,QA7BH,WACbd,EAAS,kBACL,CACII,MAAO,CAACZ,YA0BmBoB,GAAG,YAAYW,QAAQ,YAAlD,6CCqBGmF,EA5EG,WAEhB,IAAMlH,EAAQ2C,cAAc/B,MAAMV,OAAOF,MACzC,EAAoCD,mBAAS,IAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KACAtD,qBAAU,WACR,IACIuD,EAASxC,0DAAiCzB,EAC9CuB,IAAM2C,IAAID,GAAShF,MAAK,SAAAyC,GACpBE,QAAQC,IAAI,WACZD,QAAQC,IAAIH,EAASC,MACrBqC,EAActC,EAASC,SACtBG,OAAM,SAAA1B,GACPwB,QAAQC,IAAIzB,QAEf,IAEL,IAAM+G,EAA+D,KAAtDpD,EAAWqB,YAAYrB,EAAWqD,gBAAiB,GAGhE,OAED,sBAAK5H,UAAU,SAAf,UACE,8BACE,cAAC,EAAD,kBAGF,sBAAKA,UAAU,iBAAf,UAEG,oCAAM,cAAC,EAAD,IAAN,OAGF,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,KAAf,SACA,eAAC6H,EAAA,EAAD,CAAOjG,GAAG,QAAQkG,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC9C,KAAK,KAA9C,UACJ,gCACE,+BACE,qDACA,4CAGJ,kCACE,+BACE,kDACA,mCAAM,IAAMX,EAAWqD,gBAAvB,UAEA,+BACA,+CACA,oCAAOK,KAAKC,MAAa,IAAPP,GAAY,IAAM,IAApC,UAEF,+BACE,oDACA,mCAAMM,KAAKC,MAAyB,IAAnB3D,EAAW4D,SAAa,IAAM,IAA/C,UAEF,+BACE,wDACA,mCAAMF,KAAKC,MAAqB,IAAf3D,EAAW6D,KAAS,IAAM,IAA3C,UAED,+BACC,0DACA,mCAAMH,KAAKC,MAAwB,IAAlB3D,EAAW8D,QAAY,IAAM,IAA9C,kBAMN,cAAC,EAAD,sBAGG,8BAEA,cAAC,EAAD,sBCnCYC,G,cA1CE,WAAO,IAAD,EAEjB9H,EAAQ2C,cAAc/B,MAAMZ,MAC5BE,EAAS,CACbF,MAAOA,GAETU,qBAAU,WACNkB,QAAQC,IAAI7B,KACd,IAEF,IAAIQ,EAAWC,cAcf,OAEI,sBAAKjB,UAAU,WAAf,UACE,8BAEA,cAAC6B,EAAA,EAAD,CAAQC,QAlBE,WACZd,EAAS,eACL,CACII,MAAO,CAACV,aAeY6B,QAAQ,YAAYX,GAAG,UAAjD,2BAED,8BACA,eAACkC,EAAA,GAAD,GAAgBlC,GAAG,wBAAwBmC,MAAOvD,GAAlD,mBAA4D,WAA5D,wBAA8E,aAA9E,0BAED,cAACwD,EAAA,EAASC,KAAV,CAAeC,KAAK,IAApB,uBACA,cAACF,EAAA,EAASC,KAAV,CAAgBnC,QAlBH,WACbd,EAAS,kBACL,CACII,MAAO,CAACZ,YAehB,yCAHC,WCmDU+H,G,OAnFG,WAEd,IAAM/H,EAAQ2C,cAAc/B,MAAMZ,MAElC,EAAoCD,mBAAS,CACzCiI,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAD9D,mBAAOjE,EAAP,KAAmBC,EAAnB,KAGAtD,qBAAU,WACR,IACIuD,EAASxC,2DAAiCzB,EAC9CuB,IAAM2C,IAAID,GAAShF,MAAK,SAAAyC,GACpBE,QAAQC,IAAI,WACZD,QAAQC,IAAIH,EAASC,MACrBqC,EAActC,EAASC,SACtBG,OAAM,SAAA1B,GACPwB,QAAQC,IAAIzB,QAEf,IAwCH,OACQ,qBAAKZ,UAAU,aAAf,SACA,qBAAKA,UAAU,aAAf,SACA,qBAAKA,UAAU,KAAf,SACA,qBAAKA,UAAU,QAAf,SACA,eAAC,IAAD,CAAsByC,MAAO,CAACgG,WAAY,WAA1C,UAEA,gCACI,+BACA,wCACA,6CACA,sDAGJ,gCApDA,CACR,CAAC,OAAU,OAAQC,YAAY,oFAAqFC,OAAQ,GAC5H,CAAC,OAAW,OAAQD,YAAc,uIAAuIC,OAAQ,GACrK,CAAE,OAAW,MAAQD,YAAa,4MAA6MC,OAAQ,GACvP,CAAE,OAAW,MAAQD,YAAa,4OAA6OC,OAAO,GACtR,CAAE,OAAW,MAAQD,YAAa,+DAAgEC,OAAQ,GAC1G,CAAE,OAAW,OAASD,YAAa,iKAAiKC,OAAQ,GAC5M,CAAE,OAAW,MAAQD,YAAa,sHAAuHC,OAAQ,GAChK,CAAE,OAAW,MAAQD,YAAa,8HAA+HC,OAAQ,GACxK,CAAE,OAAW,MAAQD,YAAa,iIAAkIC,OAAQ,GAC3K,CAAE,OAAW,MAAQD,YAAa,uPAAwPC,OAAO,GAChS,CAAE,OAAW,OAASD,YAAa,iKAAkKC,OAAQ,IAC5M,CAAE,OAAW,OAASD,YAAa,qLAAsLC,OAAQ,IAC/N,CAAC,OAAU,OAAQD,YAAY,6LAA8LC,OAAQ,IACtO,CAAE,OAAW,OAASD,YAAa,0HAA0HC,OAAQ,IACpK,CAAE,OAAW,MAAQD,YAAa,+IAAgJC,OAAQ,IAC1L,CAAC,OAAU,OAAQD,YAAY,qIAAsIC,OAAQ,IAC7K,CAAE,OAAW,MAAQD,YAAa,uIAAwIC,OAAQ,IACjL,CAAE,OAAW,MAAQD,YAAa,+HAA+HC,OAAQ,IACzK,CAAE,OAAW,OAASD,YAAa,kMAAmMC,OAAO,IAC7O,CAAE,OAAW,MAAQD,YAAa,8HAA8HC,OAAQ,IACxK,CAAE,OAAW,OAASD,YAAa,sJAAsJC,OAAQ,IACjM,CAAE,OAAW,OAASD,YAAa,yQAAyQC,OAAQ,IACpT,CAAE,OAAW,OAASD,YAAa,6GAA6GC,OAAQ,IACxJ,CAAC,OAAU,MAAOD,YAAY,gJAAiJC,OAAQ,IACvL,CAAC,OAAU,OAAQD,YAAY,kTAAmTC,OAAQ,KA6B7VC,KA1BD,SAACC,EAAIC,GACrB,OACI,+BACI,6BAAKD,EAAIE,SACT,6BAAKF,EAAIH,cACT,6BAAKT,KAAKC,MAAqC,IAA/B3D,EAAWiE,QAAQK,EAAIF,QAAY,IAAK,GAAG,QAHtDG,qBChBFE,EA9BM,WAErB,IAAMxI,EAAQ2C,cAAc/B,MAAMZ,MAC9BQ,EAAWC,cAQb,OACD,sBAAKjB,UAAU,UAAf,UAED,cAAC,EAAD,gBACA,sBAAKA,UAAU,mBAAf,UACA,qBAAKA,UAAU,eAAf,kCACA,8BAEA,cAAC,EAAD,MAEA,8BACE,cAAC6B,EAAA,EAAD,CAAQC,QAlBO,WACbd,EAAS,kBACL,CACII,MAAO,CAACZ,YAeS+B,QAAQ,UAAUX,GAAG,aAAhD,2CAGF,cAAC,EAAD,oBC2FeqH,G,OAvHM,WAGrB,IACMvI,EAAS,CACbF,MAFY2C,cAAc/B,MAAMZ,OAIlC,EAA8BD,mBAC1B,CACA6C,cAAe,GACfC,KAAM,GACNC,QAAS,GACTC,cAAe,KALnB,mBAAOC,EAAP,KAAgB0F,EAAhB,KAuBIlI,EAAWC,cAqCf,OACE,+BACD,sBAAKjB,UAAU,cAAf,UACA,qBAAKA,UAAU,WAAf,gEAIE,sBAAKA,UAAU,MAAMqB,SAjDL,SAACC,GAClB4H,EAAW,2BAAI1F,GAAL,IAAcD,cAAejC,EAAMC,OAAOC,UAgDnD,UACK,uBAAOC,KAAK,QAAQD,MAAM,OAAOG,KAAK,SAD3C,sBAEK,uBACA,uBAAOF,KAAK,QAAQD,MAAM,SAASG,KAAK,SAH7C,wCAIK,uBACA,uBAAOF,KAAK,QAAQD,MAAM,MAAMG,KAAK,SAL1C,sCAMK,0BAER,qBAAK3B,UAAU,WAAf,gDAGE,uBACUqB,SAjEqB,SAACC,GAC9B4H,EAAW,2BAAI1F,GAAL,IAAc7B,KAAML,EAAMC,OAAOC,UAiEnCA,MAAOgC,EAAQJ,cACfpD,UAAU,YACV0B,YAAa8B,EAAQJ,cACrBzB,KAAK,kBAEd,qBAAK3B,UAAU,WAAf,8CAGF,uBACWqB,SAjFa,SAACC,GACtB4H,EAAW,2BAAI1F,GAAL,IAAcH,KAAM/B,EAAMC,OAAOC,UAiFnCA,MAAOgC,EAAQH,KACfrD,UAAU,YACV0B,YAAa8B,EAAQH,KACrB1B,KAAK,SAEf,qBAAK3B,UAAU,WAAf,iDAGE,uBACQqB,SAxFgB,SAACC,GACzB4H,EAAW,2BAAI1F,GAAL,IAAcF,QAAShC,EAAMC,OAAOC,UAwFtCA,MAAOgC,EAAQF,QACftD,UAAU,YACV0B,YAAa8B,EAAQF,QACrB3B,KAAK,YAGjB,cAACE,EAAA,EAAD,CAAQU,QAAQ,YAAaT,QAhFL,WA4BtBd,EAAS,eACH,CACAI,MAAO,CAACV,aAkDyCV,UAAU,OAAnE,4CCxGemJ,EAZW,WAE1B,OACC,gCAEE,cAAC,EAAD,IAEA,cAAC,EAAD,Q,2BCkDYC,EAlDG,WAElB,IAAM5F,EAAUL,cAAc/B,MAC9B,EAA4Cb,mBAAS,IAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACIC,EAAWC,cAwBb,OAvBFC,qBAAU,WACqB,sBAAvBJ,EAAeK,QACfiB,QAAQC,IAAI,UACZrB,EAAS,MACT,MAIFoB,QAAQC,IAAIvB,GACZsB,QAAQC,IAAI,aAEf,CAACvB,IAEJI,qBAAU,WAGRa,IAAMC,KADMC,kDACQuB,GAAS/D,MAAK,SAAAyC,GAC9BE,QAAQC,IAAIH,EAASC,MACrBpB,EAAkBmB,EAASC,SAC1BG,OAAM,SAAA1B,GACPwB,QAAQC,IAAIzB,QAEd,IAEH,sBAAKZ,UAAU,eAAf,UACE,wBAEA,qBAAKA,UAAU,iBAAf,SACG,0DAIH,qBAAKA,UAAU,iBAAf,SACM,cAACqJ,EAAA,EAAD,CAAKC,GAAI,CAAEC,QAAS,QAApB,SACH,cAACC,EAAA,EAAD,CAAkBtE,KAAK,cAIzB,8BACD,cAAC,EAAD,sBC3CHuE,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,IAAD,UACD,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,KAAK,cAAcC,OAAK,EAACC,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOF,KAAK,YAAYC,OAAK,EAACC,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,OAAK,EAACC,QAAS,cAAC,EAAD,MAC3C,cAAC,IAAD,CAAOF,KAAK,WAAWC,OAAK,EAACC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOF,KAAK,aAAaC,OAAK,EAACC,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,OAAK,EAACC,QAAS,cAAC,EAAD,aAI/CC,SAASC,eAAe,SAK1B1K,K","file":"static/js/main.602955e0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/VegaInvestLogo.a73a1716.png\";","import react, { useState } from 'react'\r\nimport Vegalogo from './VegaInvestLogo.png'\r\nimport './LogoHeader.css'\r\n\r\nconst LogoHeader = () => {\r\n\r\nreturn (\r\n\r\n    <div className=\"Logoheader\">\r\n     <img alt=\"logo\" src={Vegalogo} height='150px' width='200px' />\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default LogoHeader","import react, { useState,useEffect } from 'react'\r\nimport './Login.css'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\n\r\n/*Login form */\r\nconst Login = () => {\r\n/* Defining a state*/\r\nconst [values, setValues] = useState(\r\n    {\r\n    email: \"\",\r\n    password: \"\",    \r\n    }\r\n);\r\n\r\n/* Error message */\r\nconst [error, setError] = useState(\"\");\r\n\r\nconst [getPostMessage, setGetPostMessage] = useState({});\r\n\r\nconst handleEmailChange = (event) => {\r\n    setValues({...values, email: event.target.value})\r\n}\r\nconst handlePasswordInputChange = (event) => {\r\n    setValues({...values, password: event.target.value})\r\n}\r\n\r\nlet navigate = useNavigate();\r\n\r\nuseEffect(() => {\r\n    if (getPostMessage.Status=='found') {\r\n        navigate(\"../dashboard\", \r\n        {\r\n            state: {\r\n              values\r\n            }\r\n          });\r\n      }\r\n    else {\r\n        /*We want to store the error messsage */\r\n        setError(getPostMessage.Status);\r\n\r\n    }\r\n        \r\n}, [getPostMessage])\r\n\r\n/*We check if the email and pw match the DB */\r\n const HandleLogin = () => {\r\n    const url = 'https://vegainvest.herokuapp.com/'\r\n    var fullurl= url + 'users/login';\r\n    axios.post(fullurl, values).then(response => {\r\n        setGetPostMessage(response.data)\r\n        console.log(response.data)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n}\r\n\r\n\r\n\r\nreturn (\r\n\r\n    <div className=\"Login-container\">\r\n        <div className=\"LoginHeader\"> \r\n        Welcome to VegaInvest!\r\n        </div>\r\n        <div className=\"form\"> \r\n        {/* Define a form with the email and pw input*/}\r\n        <form className=\"Login-form\">\r\n            <input \r\n            onChange={handleEmailChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            className=\"form-field\"\r\n            placeholder=\"Enter Your Email\"\r\n            name=\"email\"\r\n            /> \r\n            <br />\r\n            <input \r\n            onChange={handlePasswordInputChange}\r\n            values={values.password}\r\n            className=\"form-field\"\r\n            type=\"password\"\r\n            placeholder=\"Enter Your Password\"\r\n            name=\"password\"\r\n            />\r\n            <br />\r\n        <div id=\"errorMessage\"> {error} </div>\r\n        <br />\r\n        {/* Login and Sign Up Buttons*/}\r\n        <Button onClick={HandleLogin} variant=\"secondary\" className=\"LoginBtn\" id=\"BtnLogin\"> Log In </Button>\r\n        <br />\r\n        <Link to=\"/createuser\" style={{ textDecoration: 'none', color: 'black' }}> \r\n        <Button variant=\"dark\" className=\"LoginBtn\" id=\"SignUp\"> \r\n        Sign Up \r\n        </Button>\r\n        </Link> \r\n        \r\n        </form>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Login","import './LoginPg.css';\r\nimport LogoHeader from '../../components/LogoHeader/LogoHeader.js';\r\nimport Login from '../../components/LoginForm/Login.js';\r\n\r\n/*This is the Login Page */\r\nfunction LoginPg() {\r\n  return (\r\n    <div className=\"LoginPg\">\r\n    {/*Login Page Header */}\r\n      <LogoHeader />\r\n    {/* Login Page Form */}\r\n      <Login />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPg;\r\n","import react, { useState ,useEffect} from 'react'\r\nimport './UserPWForm.css'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n/*This allows the user to create a PW and then store it in the DB */\r\nconst UserPwForm = () => {\r\n\r\nconst [values, setValues] = useState(\r\n    {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",   \r\n    }\r\n);\r\n\r\nconst [Errormsg,setErrormsg] = useState(\"\")\r\n\r\nconst handleEmailChange = (event) => {\r\n    setValues({...values, email: event.target.value})\r\n}\r\n\r\nconst handlePasswordInputChange = (event) => {\r\n    setValues({...values, password: event.target.value})\r\n    \r\n}\r\nconst handleConfirmPasswordInputChange = (event) => {\r\n    setValues({...values, confirmpassword: event.target.value})\r\n}\r\n\r\nconst [getPostMessage, setGetPostMessage] = useState({});\r\n\r\nlet navigate = useNavigate();\r\n\r\nuseEffect(() => {\r\n    if (getPostMessage.Status=='registered') {\r\n        console.log(\"inside\");\r\n        navigate(\"../question\", \r\n        {\r\n            state: {\r\n              values\r\n            }\r\n          });\r\n      }\r\n    else {\r\n        setErrormsg(getPostMessage.Status);\r\n\r\n    }\r\n        \r\n}, [getPostMessage])\r\n\r\nconst HandleRegister = () => {\r\n    if (values.password==values.confirmpassword){\r\n    const url = 'https://vegainvest.herokuapp.com/'\r\n    var fullurl= url +'users/register';\r\n    /*Attempts to post the password and email to the DB */\r\n    axios.post(fullurl, values).then(response => {\r\n        setGetPostMessage(response.data)\r\n        console.log(response.data)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n}\r\n    else {\r\n        console.log(\"passwords don't match\");\r\n        setErrormsg(\"Passwords don't match!\");\r\n    }\r\n}\r\nreturn (\r\n\r\n    <div className=\"UserPWForm-container\">\r\n        <div className=\"UserPWFormHeader\">\r\n        Register Email and Password\r\n        </div>\r\n        <div className=\"form\">\r\n        <form className=\"UserPW-form\">\r\n            <input\r\n            onChange={handleEmailChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            className=\"form-field\"\r\n            placeholder=\"Enter your Email\"\r\n            name=\"email\"\r\n            />\r\n            <br />\r\n            <input\r\n            onChange={handlePasswordInputChange}\r\n            value={values.password}\r\n            className=\"form-field\"\r\n            placeholder=\"Enter a Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            />\r\n            <br />\r\n            <input\r\n            onChange={handleConfirmPasswordInputChange}\r\n            value={values.confirmpassword}\r\n            className=\"form-field\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"confirmpassword\"\r\n            type=\"password\"\r\n            />\r\n            <br />\r\n            <div className=\"errMessage\"> {Errormsg} </div>\r\n            <br />\r\n            <Button onClick={HandleRegister} variant=\"secondary\" className=\"UserPWBtn\"> Create New User </Button>\r\n            </form>    \r\n        </div>\r\n    \r\n    </div>\r\n  );\r\n\r\n}\r\nexport default UserPwForm","import './CreateUser.css';\r\nimport LogoHeader from '../../components/LogoHeader/LogoHeader.js';\r\nimport UserPWForm from '../../components/UserPWForm/UserPWForm.js';\r\n/* This is the page where a user creates a login and password*/\r\nfunction CreateUser() {\r\n  return (\r\n    <div className=\"CreateUser\">\r\n      <LogoHeader />\r\n      {/* Form component */}\r\n      <UserPWForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateUser;","import react, { useState ,useEffect} from 'react'\r\nimport './userqone.css';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst Userqone = (values) => {\r\n  const value=  useLocation().state.values.email\r\n  const [pvalues, setpvalues] = useState(\r\n    {\r\n    email: value,\r\n    amount_invest: \"\",\r\n    goal: \"\",\r\n    horizon: \"\",\r\n    risk_appetite: \"\",   \r\n    }\r\n);\r\n\r\n\r\n{/* const [getPostMessage, setGetPostMessage] = useState({}) */}\r\n\r\nconst [Errormsg,setErrormsg] = useState(\"\")\r\n\r\nconst handleGoalChange = (event) => {\r\n    setpvalues({...pvalues, goal: event.target.value})\r\n}\r\nconst handleHorizonChange = (event) => {\r\n    setpvalues({...pvalues, horizon: event.target.value})\r\n}\r\nconst handleAmountInvestChange = (event) => {\r\n    setpvalues({...pvalues, amount_invest: event.target.value})\r\n}\r\n\r\nconst onChangeMC = (event) => {\r\n  setpvalues({...pvalues, risk_appetite: event.target.value});\r\n\r\n}\r\n\r\nlet navigate = useNavigate();\r\n\r\n{/*useEffect(() => {\r\n    if (getPostMessage.Status=='portfolio created!') {\r\n        console.log(\"inside\");\r\n        navigate(\"../\", \r\n        {\r\n          });\r\n      }\r\n    else {\r\n        setErrormsg(getPostMessage.Status);\r\n\r\n    }\r\n        \r\n}, [getPostMessage]) */}\r\n\r\nconst HandlePortfolio = () => {\r\n  /*Following if statements ensure we aren't posting anything bizarre */\r\n  if (isNaN(parseInt(pvalues.horizon))) {\r\n    setErrormsg('Invalid Horizon!');\r\n  }\r\n  else if (isNaN(parseInt(pvalues.goal))) {\r\n    setErrormsg('Invalid Goal!');\r\n  }\r\n  else if (isNaN(parseInt(pvalues.amount_invest))) {\r\n    setErrormsg('Invalid Amount Invested!');\r\n  }\r\n  else if (parseInt(pvalues.amount_invest)<=0) {\r\n    setErrormsg('Invalid Amount Invested!');\r\n  }\r\n  else if (parseInt(pvalues.goal)<=0) {\r\n    setErrormsg('Invalid Goal!');\r\n  }\r\n  else if (parseInt(pvalues.horizon)<=0) {\r\n    setErrormsg('Invalid Horizon1');\r\n  }\r\n  else if (parseInt(pvalues.goal) <= parseInt(pvalues.amount_invest)){\r\n    setErrormsg('Goal Must Exceed Amount Invested!');\r\n  }\r\n  else if (pvalues.risk_appetite===\"\") {\r\n    setErrormsg('You must select a Risk Level!')\r\n  }\r\n  else {\r\n  console.log(\"you did it\");\r\n  /*We navigat to the loading page */\r\n  navigate(\"../loading\", \r\n        {\r\n          state: pvalues});\r\n}\r\n}\r\n\r\n{/* const HandlePortfolio = () => {\r\n  var fullurl='http://127.0.0.1:5000/portfolios/new';\r\n  axios.post(fullurl, pvalues).then(response => {\r\n      setGetPostMessage(response.data)\r\n      console.log(response.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  } */}\r\nreturn (\r\n  <form>\r\n <div className=\"mccontainer\"> \r\n <div className=\"question\"> \r\n 1. What is your risk tolerance for this portfolio?\r\n </div> \r\n<div className=\"rad\" onChange={onChangeMC}>\r\n        <input type=\"radio\" value=\"high\" name=\"risk\" /> High, bring it on!\r\n        <br />\r\n        <input type=\"radio\" value=\"medium\" name=\"risk\" /> Moderate, some risk for some reward.\r\n        <br />\r\n        <input type=\"radio\" value=\"low\" name=\"risk\" /> Low, losing money makes me squirm.\r\n        <br /> \r\n      </div>\r\n\r\n\r\n<div className=\"question\">\r\n   2. How much do you have to invest? \r\n    </div>\r\n  <input\r\n            onChange={handleAmountInvestChange}\r\n            value={pvalues.amount_invest}\r\n            className=\"formfield\"\r\n            placeholder=  \"Enter the Amount in $\"\r\n            name=\"amount_invest\"\r\n  />\r\n   <div className=\"question\">\r\n  3. What is your investment goal?\r\n  </div>\r\n <input\r\n            onChange={handleGoalChange}\r\n            value={pvalues.goal}\r\n            className=\"formfield\"\r\n            placeholder=\"Enter the Goal in $\" \r\n            name=\"goal\"\r\n  />\r\n  <div className=\"question\">\r\n    4. What is your investment horizon?\r\n    </div>\r\n    <input\r\n            onChange={handleHorizonChange}\r\n            value={pvalues.horizon}\r\n            className=\"formfield\"\r\n            placeholder=\"Enter the horizon in years\"\r\n            name=\"horizon\"\r\n  />\r\n  <div className=\"errMSG\"> {Errormsg} </div>\r\n \r\n<Button onClick= {HandlePortfolio} variant=\"secondary\" className=\"pBtn\"> Create Portfolio </Button>\r\n</div>\r\n </form>\r\n\r\n  );\r\n\r\n}\r\nexport default Userqone","import react, { useState } from 'react'\r\nimport LogoHeader from '../../components/LogoHeader/LogoHeader.js';\r\nimport Userqone from '../../components/userqone/userqone';\r\n\r\nconst Questionnaire = () => {\r\n\r\nreturn (\r\n <div> \r\n   <LogoHeader />\r\n   {/* User questionnaire */}\r\n   <Userqone />\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Questionnaire","export default __webpack_public_path__ + \"static/media/VegaLogoCon.41a51d5c.jpeg\";","import react, { useState } from 'react'\r\nimport Vegalogo from './VegaLogoCon.jpeg'\r\nimport './Dashhead.css'\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\n\r\n\r\nconst Dashhead = () => {\r\n/*Need to retrieve email */\r\nconst email = useLocation().state.values.email;\r\nlet navigate = useNavigate();\r\n/* Need to define the path from this header to the edit portfolio details questionnaire*/\r\nconst NavQuest = () => {\r\n    navigate(\"../editquestion\", \r\n        {\r\n            state: {email}\r\n          });\r\n}\r\nreturn (\r\n    <div className=\"Dashhead\">\r\n      <div> \r\n     <img alt=\"logo\" src={Vegalogo} height='50px' width='75px' />\r\n     </div>\r\n     <div> \r\n     <DropdownButton id=\"dropdown-basic-button\" title={email} id=\"dropBtn\" variant=\"secondary\">\r\n       \r\n    <Dropdown.Item href=\"/\"> Logout  </Dropdown.Item>\r\n    <Dropdown.Item  onClick={NavQuest}>  Edit Portfolio Details </Dropdown.Item>\r\n    </DropdownButton>\r\n    </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Dashhead;","import Plotly from 'plotly.js-basic-dist';\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nimport react, { useState, useEffect } from 'react';\r\nimport './PortfolioGraph.css';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nconst PortfolioGraph = () => {\r\n  /*We need to fetch the email and portfolio value evolution from the back-end */\r\n  const email=  useLocation().state.values.email;\r\n  const [getMessage, setGetMessage] = useState({})\r\n  useEffect(() => {\r\n    const url = 'https://vegainvest.herokuapp.com/'\r\n    var fullurl= url + 'portfolios/pushParams/' + email;\r\n    axios.get(fullurl).then(response => {\r\n        console.log(\"SUCCESS\")\r\n        console.log(response.data);\r\n        setGetMessage(response.data)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n  {console.log(getMessage.date_vector)}\r\n  {console.log(getMessage.portval)}\r\n    return (\r\n  \r\n        <div className=\"PortfolioGraph\">\r\n            <Plot className=\"Plot\"\r\n            data={[\r\n                {\r\n                /*We have specified that the time interval will always be the same */\r\n                x: getMessage.date_vector,\r\n                y: getMessage.portval,\r\n                hovertemplate:  '%{x}<br>' +'$%{y:.2f}' +'<extra></extra>',\r\n                type: 'linear',\r\n                line:{width:5,color:\"#0645AD\"},\r\n                marker: { size: 7, color:'#ABDDFC', line:{width:1,color:'grey'} },\r\n                fill: 'tozeroy'\r\n                }]}\r\n            layout={{ \r\n              margin:{l:0, r:0, b:30, t:40, pad:1},\r\n                title:{text:\"Portfolio Value: \"+getMessage.lastportval},\r\n                titlefont:{size:15,family:\"Arial Black\",color:'black'},\r\n                width: '70%',\r\n                height: 575,  \r\n                paper_bgcolor:'white',\r\n                plot_bgcolor:\"white\",    \r\n                font_color:\"white\",\r\n                xaxis: {  \r\n                  tickfont:{color:'rgba(0,0,0,0)',size:16},   \r\n                  showgrid:false,  \r\n                  autorange: true,\r\n                  rangeselector: {\r\n                      y:-0.085,\r\n                      x:0.35,\r\n                      buttons: [\r\n                      {\r\n                        title:'up $300',\r\n                        count: 1,\r\n                        label: '1m',\r\n                        step: 'month',\r\n                        stepmode: 'backward',\r\n                      },\r\n                      {\r\n                        count: 6,\r\n                        label: '6m',\r\n                        step: 'month',\r\n                        stepmode: 'backward'\r\n                      },\r\n                      {\r\n                        count: 1,\r\n                        label: 'YTD' , \r\n                        step: 'year',\r\n                        stepmode: 'todate',\r\n                        count: 1,\r\n                      }, \r\n                      {\r\n                        count: 12,\r\n                        label: '1y',\r\n                        step: 'month',\r\n                        stepmode: 'backward'\r\n                      },\r\n                      {step: 'all',\r\n                        label: 'ALL',\r\n                       stepmode:'backward'}\r\n                    ]},\r\n                    type:'date'\r\n                },\r\n                yaxis: {   \r\n                  tickfont:{color:\"rgba(0,0,0,0)\",size:14},   \r\n                  showgrid:false,\r\n                  autorange: true,\r\n                  range: [86.8700008333, 138.870004167],\r\n                  tickprefix:\"$\",\r\n                  tickformat:\",.\",\r\n                  side:\"right\"\r\n                }} }\r\n            />\r\n        </div>\r\n      );\r\n    \r\n    }\r\n    export default PortfolioGraph","import react, { useState } from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n\r\nreturn (\r\n/* This is a footer component*/\r\n    <div className=\"footer\">\r\n        footer\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Footer","import './Keyportfacts.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport react, { useState,useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Keyportfacts = () => {\r\n/* We need to revtrieve the email and other info from the backend*/\r\nconst email=  useLocation().state.values.email;\r\nconst [getMessage, setGetMessage] = useState({})\r\n\r\nuseEffect(() => {\r\n    if (getMessage.Status=='Success') {\r\n        console.log(\"inside\");\r\n      }\r\n        \r\n}, [setGetMessage])\r\n\r\nuseEffect(() => {\r\n    const url = 'https://vegainvest.herokuapp.com/'\r\n    var fullurl= url + 'portfolios/pushParams/' + email;\r\n    axios.get(fullurl).then(response => {\r\n        console.log(\"SUCCESS\")\r\n        console.log(response.data);\r\n        setGetMessage(response.data)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\nconst HorzProgress=(getMessage.time_difference/getMessage.horizon)*100;\r\nconst GoalProgress=(getMessage.lastportval/getMessage.goal)*100;\r\nlet navigate = useNavigate();\r\nconst NavPort = () => {\r\n    navigate(\"../portfoliosum\", \r\n        {\r\n            state: {email}\r\n          });\r\n}\r\nconst NavQuest = () => {\r\n    navigate(\"../editquestion\", \r\n        {\r\n            state: {email}\r\n          });\r\n}\r\n\r\n\r\nreturn (\r\n\r\n    <div className=\"KeyContainer\">\r\n        <div className>\r\n            <div className=\"Title\"> \r\n            Key Portfolio Facts\r\n            </div>\r\n        </div>\r\n        <div className=\"KeyRow\">\r\n            <strong style={{width: \"12rem\", marginLeft:'1rem'}}> Investment Horizon: </strong> <div> <ProgressBar style={{width: '15rem', marginTop: '5px'}} now={HorzProgress} /> </div>  <div style={{width: \"5rem\", marginLeft:\"1rem\"}}> {getMessage.horizon} years </div>\r\n        </div>\r\n        <div className=\"KeyRow\">\r\n            <strong style={{width: \"12rem\", marginLeft: '1rem'}}> Investment Goal: </strong> <div> <ProgressBar style={{width: '15rem', marginTop: '5px'}} now={GoalProgress} /> </div>  <div style={{width: \"5rem\", marginLeft: \"1rem\"}}> ${getMessage.goal} </div>\r\n        </div>\r\n\r\n        <div className=\"KeyRow\"> \r\n        <strong> Risk Level: {getMessage.risk_appetite}</strong>\r\n        </div>\r\n        <div className=\"KeyRow\">\r\n            {/* These buttons allow the user to navigate to other pages */}\r\n            <Button id=\"KeyHoldBtn\" onClick={NavPort} variant=\"primary\"> View Portfolio Holdings </Button>\r\n            <Button onClick={NavQuest} id=\"KeyDetBtn\" variant=\"secondary\"> Edit Portfolio Details </Button> \r\n        </div>\r\n    \r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Keyportfacts","import react, { useState,useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport Dashhead from '../../components/Dashhead/Dashhead.js'\r\n// import Plot from \"react-plotly.js\";\r\nimport PortfolioGraph from '../../components/PortfolioGraph/PortfolioGraph'\r\nimport Footer from '../../components/Footer/Footer';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table'\r\nimport Keyportfacts from '../../components/Keyportfacts/Keyportfacts.jsx';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n/* Quering data from MongoDB and loading the user email */\r\n  const email=  useLocation().state.values.email;\r\n  const [getMessage, setGetMessage] = useState({})\r\n  useEffect(() => {\r\n    const url = 'https://vegainvest.herokuapp.com/'\r\n    var fullurl= url + 'portfolios/pushParams/' + email;\r\n    axios.get(fullurl).then(response => {\r\n        console.log(\"SUCCESS\")\r\n        console.log(response.data);\r\n        setGetMessage(response.data)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n/* computing the return */\r\nconst rtotal=((getMessage.lastportval/getMessage.amount_invested -1)*100) ;\r\n  \r\n\r\n  return(\r\n\r\n <div className=\"Dashbd\">  \r\n   <div> \r\n     <Dashhead> </Dashhead>\r\n   </div>\r\n\r\n   <div className=\"Dashrowcontain\">\r\n     {/* This is a graph component */}\r\n      <div> <PortfolioGraph></PortfolioGraph> </div>\r\n\r\n{/* This is a table of statistics*/}\r\n    <div className=\"Dashcolcontain\">\r\n      <div className=\"tb\"> \r\n      <Table id=\"table\" striped bordered hover size=\"sm\">\r\n  <thead>\r\n    <tr>\r\n      <th>Portfolio Statistic</th>\r\n      <th>Value</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr> \r\n      <td> Amount Invested</td>\r\n      <td> {'$' + getMessage.amount_invested} </td> \r\n      </tr>\r\n      <tr> \r\n      <td> Total Return</td>\r\n      <td>  {Math.round(rtotal*100)/100 + '%'} </td> \r\n      </tr>\r\n    <tr>\r\n      <td> Annualized Return</td>\r\n      <td> {Math.round(getMessage.returns*100)/100 + '%'} </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Annualized Volatility</td>\r\n      <td> {Math.round(getMessage.vol*100)/100 + '%'} </td>\r\n    </tr>\r\n     <tr>\r\n      <td> Annualized Sharpe Ratio</td>\r\n      <td> {Math.round(getMessage.sharpe*100)/100 + '%'} </td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n</div>\r\n   {/* This is the key portfolio facts components */}\r\n<Keyportfacts> </Keyportfacts>\r\n</div>\r\n   </div>\r\n   <div>\r\n     {/* Footer components */}\r\n   <Footer> </Footer>\r\n   </div>\r\n  </div>\r\n  );\r\n\r\n}\r\nexport default Dashboard","import react, { useState, useEffect } from 'react'\r\nimport {DropdownButton, Dropdown, Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './Porthead.css';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\n\r\n/*This is the header of the Portfolio summary page */\r\nconst Porthead = () => {\r\n/* we need to find the user's email */\r\nconst email = useLocation().state.email;\r\nconst values = {\r\n  email: email,\r\n}\r\nuseEffect(() => {\r\n    console.log(email)\r\n},[]);\r\n\r\nlet navigate = useNavigate();\r\nconst NavDash = () => {\r\n    navigate(\"../dashboard\", \r\n        {\r\n            state: {values}\r\n          });\r\n}\r\nconst NavQuest = () => {\r\n    navigate(\"../editquestion\", \r\n        {\r\n            state: {email}\r\n          });\r\n}\r\n\r\nreturn (\r\n\r\n    <div className=\"Porthead\">\r\n      <div>  \r\n        {/* User can go the Dashboard page from this button */}\r\n      <Button onClick={NavDash} variant=\"secondary\" id=\"DashBtn\"> Dashboard </Button> \r\n     </div>\r\n     <div> \r\n     <DropdownButton id=\"dropdown-basic-button\" title={email} id=\"dropBtn\" variant=\"secondary\">\r\n       \r\n    <Dropdown.Item href=\"/\"> Logout  </Dropdown.Item>\r\n    <Dropdown.Item  onClick={NavQuest}>  Edit Portfolio Details </Dropdown.Item>\r\n    </DropdownButton>\r\n    </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Porthead","\r\nimport react, { useState, useEffect } from 'react'\r\nimport * as ReactBootStrap from \"react-bootstrap\"\r\nimport './ETF_table.css'\r\nimport axios from 'axios';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst ETF_table = () => { \r\n    /* Fetching the weights from the back-end and getting the user's email */\r\n    const email=  useLocation().state.email;\r\n    {/*const [getMessage, setGetMessage] = useState({})*/}\r\n    const [getMessage, setGetMessage] = useState({\r\n        weights: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    })\r\n    useEffect(() => {\r\n      const url = 'https://vegainvest.herokuapp.com/'\r\n      var fullurl= url +'portfolios/pushWeights/' + email;\r\n      axios.get(fullurl).then(response => {\r\n          console.log(\"SUCCESS\")\r\n          console.log(response.data);\r\n          setGetMessage(response.data)\r\n        }).catch(error => {\r\n          console.log(error)\r\n        })\r\n    }, [])\r\n /* This defines the ETF table */   \r\nconst ETF = [\r\n    {'ticker': \"QCLN\", description:\"Tracks the First Trust NASDAQ Clean Edge Green Energy (alternative energy) Index.\", weight: 0},\r\n    {'ticker' : 'SOXX', description : 'The iShares Semiconductor ETF tracks the investment results of an index composed of U.S.listed equities in the semiconductor sector.',weight: 1}, \r\n                { 'ticker' : 'PTF' , description :'Comprised of stocks of various companies based in the technology sector of the market. Invests all of its assets in domestic securities, and holds some big names in the tech sector, i.e., Apple and IBM', weight: 2},\r\n                { 'ticker' : 'LIT' , description :'Invests in the full lithium cycle, from mining and refining the metal,through battery production. Seeks to provide investment results that correspond generally to the price and yield performance of the Solactive Global Lithium Index.', weight:3},\r\n                { 'ticker' : 'PTH' , description :'Tracks the Dorsey Wright Healthcare Technical Leaders Index.', weight: 4},\r\n                { 'ticker' : 'FINX' , description :'Seeks to invest in companies on the leading edge of the emerging financian technology sector,including industries like insurance, investing, and fundraising. ',weight: 5},\r\n                { 'ticker' : 'IPO' , description :'Tracks the Renaissance IPO Index designed to hold a portfolio of the largest, most liquid, newly-listed U.S. IPOs. ', weight: 6},\r\n                 { 'ticker' : 'PSJ' , description :'Seeks to replicate a benchmark that is comprised of various software companies. Primarily invests in medium cap companies. ', weight: 7},\r\n                  { 'ticker' : 'IWY' , description :'Provides exposure to large U.S. companies whose earnings are expected to grow at an above-average rate relative to the market.', weight: 8},\r\n                   { 'ticker' : 'KCE' , description :'Seeks to provide exposure to the capital markets segment of the S&P TMI, which comprises the following sub-industries: Asset Management & Custody Banks, Diversified Capital Markets, Financial Exchanges & Data, and Investment Banking & Brokerage', weight:9},\r\n                    { 'ticker' : 'XWEB' , description :'Tracks the the S&P Internet Select Industry Index, which includes sub-industies such as Internet & Direct Marketing Retail, Internet Services & Infrastructure', weight: 10},\r\n                     { 'ticker' : 'FDIS' , description :'Tracks the Fidelity MSCI Consumer Discretionary Index ETFoffering targeted exposure to the U.S. consumer discretionary sector, i.e., hotel operators, cruise line companies, etc. ', weight: 11},\r\n                       {'ticker': \"GAMR\", description:\"Tracks an equity index of global firms that support, create or use video games. Stocks are assigned to pure-play, non-pure-play or conglomerate baskets, and weighted equally within each.\", weight: 12},\r\n                      { 'ticker' : 'PALL' , description :'First in the space that focuses on palladium exposure in an ETF. The fund tracks the movements in palladium spot price.',weight: 13},\r\n                       { 'ticker' : 'IAI' , description :'Tracks the investment results of the Dow Jones U.S. Select Investment Services Index, composed of U.S. investment services sector equities. ', weight: 14},\r\n                       {'ticker': \"IMCG\", description:\"seeks to track the investment results of an index composed of mid-capitalization U.S. equities that exhibit growth characteristics\", weight: 15}, \r\n                       { 'ticker' : 'IHI' , description :'Tracks an index of medical devices U.S. equitiesproviding exposure to U.S. companies that manufacture and distribute medical devices', weight: 16},\r\n                        { 'ticker' : 'ITB' , description :'Exposure to U.S. companies that manufacture residential homes, providing targeted accessto domestic home construction stocks',weight: 17},\r\n                        { 'ticker' : 'PSCH' , description :'Based on the S&P SmallCap600 Capped Health Care Index. Provides exposure to common stocks in the health care sector, including health care related products, biotechnology, and pharmaceuticals', weight:18},\r\n                        { 'ticker' : 'RTH' , description :'RTH tracks a market-cap-weighted index of the 25 largest US-listed companies that derive most of their revenue from retail.',weight: 19},\r\n                        { 'ticker' : 'SOCL' , description :'Tracks the Solactive Social Media Total Return Index, featuring companies that provide social networking, file sharing, and other web-based media. ',weight: 20},\r\n                        { 'ticker' : 'BOTZ' , description :'Seeks to invest in companies that potentially stand to benefit from increased adoption and utilization of robotics and artificial intelligence (AI), including those involved with industrial robotics and automation, non-industrial robots, and autonomous vehicles.',weight: 21},\r\n                        { 'ticker' : 'PTNQ' , description :'PTNQ tracks an index that holds the NASDAQ-100 securities and/or 3-month US T-bills according to momentum.',weight: 22},\r\n                        {'ticker': \"BBC\", description:\"Tracks the LifeSci Biotechnology Clinical Trials Index, which tracks the performance of select clinical trials stage biotechnology companies.\", weight: 23},\r\n                        {'ticker': \"ERTH\", description:\"Fund that seeks to track the investment results of MSCI Global Environment Select Index. The Fund generally will invest at least 90% of its total assets in the securities that comprise the Underlying Index. The Underlying Index is designed to maximize exposure to six themes that impact the environment.\", weight: 24}\r\n\r\n]\r\n    const renderETF=(ETF,index)=> {\r\n    return(\r\n        <tr key={index}>\r\n            <td>{ETF.ticker}</td>\r\n            <td>{ETF.description}</td>\r\n            <td>{Math.round(getMessage.weights[ETF.weight]*100*1000,3)/1000}</td>\r\n        </tr>\r\n        )\r\n    }\r\n\r\n    return(\r\n            <div className=\"rowcontain\">\r\n            <div className=\"colcontain\">\r\n            <div className=\"tb\">\r\n            <div className=\"table\">\r\n            <ReactBootStrap.Table style={{background: \"#F1F1F1\"}}>\r\n                {/* Defining a table */}\r\n            <thead>\r\n                <tr>\r\n                <th>Ticker</th>\r\n                <th>Description</th>\r\n                <th>% of Portfolio </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {/* Filling in the values of the table from the dictionary */}\r\n                {ETF.map(renderETF)}\r\n            </tbody>\r\n            </ReactBootStrap.Table> \r\n            </div> \r\n            </div> \r\n            </div>\r\n            </div> \r\n    \r\n            );\r\n}\r\nexport default ETF_table;\r\n","import React, { useState } from 'react';\r\nimport './PortfolioSum.css';\r\nimport Porthead from '../../components/Porthead/Porthead';\r\nimport ETF_table from '../../components/ETF_table/ETF_table';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\n\r\n\r\nconst PortfolioSum = () => {\r\n/* Quering the back-end for information and obtaining the userID/email */\r\nconst email = useLocation().state.email;\r\nlet navigate = useNavigate();\r\nconst NavQuest = () => {\r\n    navigate(\"../editquestion\", \r\n        {\r\n            state: {email}\r\n          });\r\n}\r\n\r\n  return(\r\n <div className=\"Portsum\"> \r\n {/* Header component */}\r\n<Porthead> </Porthead>\r\n<div className=\"PortsumContainer\"> \r\n<div className=\"PortsumTitle\"> Portfolio Holdings </div>\r\n<div> \r\n  {/* ETF Table component */}\r\n<ETF_table></ETF_table>\r\n</div>\r\n<div>\r\n  <Button onClick={NavQuest} variant=\"primary\" id=\"Portsumbtn\" > Edit Portolio Details  </Button>\r\n</div>\r\n</div>\r\n<Footer> </Footer>\r\n  </div>\r\n  );\r\n\r\n}\r\nexport default PortfolioSum","import react, { useState,useEffect } from 'react'\r\nimport './edituserqone.css';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nconst Edituserqone = () => {\r\n\r\n/* Fetching values from the back end*/\r\nconst email=  useLocation().state.email;\r\nconst values = {\r\n  email: email,\r\n}\r\nconst [pvalues, setpValues] = useState(\r\n    {\r\n    amount_invest: \"\",\r\n    goal: \"\",\r\n    horizon: \"\", \r\n    risk_appetite: \"\",  \r\n    }\r\n);\r\nconst handleGoalChange = (event) => {\r\n    setpValues({...pvalues, goal: event.target.value})\r\n}\r\nconst handleHorizonChange = (event) => {\r\n    setpValues({...pvalues, horizon: event.target.value})\r\n}\r\nconst handleAmountInvestChange = (event) => {\r\n    setpValues({...pvalues, name: event.target.value})\r\n}\r\n\r\nconst onChangeMC = (event) => {\r\n  setpValues({...pvalues, risk_appetite: event.target.value});\r\n\r\n}\r\n\r\nlet navigate = useNavigate();\r\n\r\n\r\nconst HandlePortfolio = () => {\r\n  /*if (isNaN(parseInt(pvalues.horizon))) {\r\n    setErrormsg('Invalid Horizon!');\r\n  }\r\n  else if (isNaN(parseInt(pvalues.goal))) {\r\n    setErrormsg('Invalid Goal!');\r\n  }\r\n  else if (isNaN(parseInt(pvalues.amount_invest))) {\r\n    setErrormsg('Invalid Amount Invested!');\r\n  }\r\n  else if (parseInt(pvalues.amount_invest)<=0) {\r\n    setErrormsg('Invalid Amount Invested!');\r\n  }\r\n  else if (parseInt(pvalues.goal)<=0) {\r\n    setErrormsg('Invalid Goal!');\r\n  }\r\n  else if (parseInt(pvalues.horizon)<=0) {\r\n    setErrormsg('Invalid Horizon1');\r\n  }\r\n  else if (parseInt(pvalues.goal) <= parseInt(pvalues.amount_invest)){\r\n    setErrormsg('Goal Must Exceed Amount Invested!');\r\n  }\r\n  else if (pvalues.risk_appetite===\"\") {\r\n    setErrormsg('You must select a Risk Level!')\r\n  }\r\n\r\n  else {\r\n  */\r\n  navigate(\"../dashboard\", \r\n        {\r\n        state: {values}\r\n        });\r\n}\r\n\r\nreturn (\r\n  <form>\r\n <div className=\"mccontainer\"> \r\n <div className=\"question\"> \r\n {/* Questions of the questionnaire */}\r\n 1. What is your risk tolerance for this portfolio?\r\n </div> \r\n   <div className=\"rad\" onChange={onChangeMC}>\r\n        <input type=\"radio\" value=\"high\" name=\"risk\" /> High, bring it on!\r\n        <br />\r\n        <input type=\"radio\" value=\"medium\" name=\"risk\" /> Moderate, some risk for some reward.\r\n        <br />\r\n        <input type=\"radio\" value=\"low\" name=\"risk\" /> Low, losing money makes me squirm.\r\n        <br /> \r\n      </div>\r\n<div className=\"question\">\r\n   2. How much do you have to invest? \r\n    </div>\r\n  <input\r\n            onChange={handleAmountInvestChange}\r\n            value={pvalues.amount_invest}\r\n            className=\"formfield\"\r\n            placeholder={pvalues.amount_invest}\r\n            name=\"amount_invest\"\r\n  />\r\n   <div className=\"question\">\r\n  3. What is your investment goal?\r\n  </div>\r\n <input\r\n            onChange={handleGoalChange}\r\n            value={pvalues.goal}\r\n            className=\"formfield\"\r\n            placeholder={pvalues.goal}\r\n            name=\"goal\"\r\n  />\r\n  <div className=\"question\">\r\n    4. What is your investment horizon?\r\n    </div>\r\n    <input\r\n            onChange={handleHorizonChange}\r\n            value={pvalues.horizon}\r\n            className=\"formfield\"\r\n            placeholder={pvalues.horizon}\r\n            name=\"horizon\"\r\n  /> \r\n  {/* Creating the button and defining how it responds to a click */}\r\n<Button variant=\"secondary\"  onClick= {HandlePortfolio}  className=\"pBtn\"> Recalculate Portfolio </Button>\r\n</div>\r\n </form>\r\n  );\r\n\r\n}\r\nexport default Edituserqone","import react, { useState } from 'react'\r\nimport LogoHeader from '../../components/LogoHeader/LogoHeader.js';\r\nimport Edituserqone from '../../components/edituserqone/edituserqone';\r\n\r\nconst Editquestionnaire = () => {\r\n\r\nreturn (\r\n <div> \r\n   {/* Page for editing the user's portfolio */}\r\n   <LogoHeader />\r\n   {/* Form */}\r\n   <Edituserqone />\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Editquestionnaire","import './LoadingDet.css';\r\nimport react, { useState ,useEffect} from 'react'\r\nimport Dashhead from '../../components/Dashhead/Dashhead.js'\r\n// import Plot from \"react-plotly.js\";\r\nimport Footer from '../../components/Footer/Footer';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n/* This is the Loading Page */\r\nconst LoadingDet= () => {\r\n\r\nconst pvalues=  useLocation().state\r\nconst [getPostMessage, setGetPostMessage] = useState({})\r\nlet navigate = useNavigate(); \r\nuseEffect(() => {\r\n    if (getPostMessage.Status=='portfolio created!') {\r\n        console.log(\"inside\");\r\n        navigate(\"../\", \r\n        {\r\n          });\r\n      }\r\n    else {\r\n      console.log(getPostMessage);\r\n      console.log('error!');\r\n      }        \r\n}, [getPostMessage])\r\n\r\nuseEffect(() => {\r\n  const url = 'https://vegainvest.herokuapp.com/'\r\n  var fullurl=url + 'portfolios/new';\r\n  axios.post(fullurl, pvalues).then(response => {\r\n      console.log(response.data)\r\n      setGetPostMessage(response.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  },[]);\r\n  return(\r\n <div className=\"LoadingDetbd\">  \r\n   <div> \r\n   </div>\r\n   <div className=\"mainLoadingMSG\">\r\n      <div>\r\n          Creating Portfolio...\r\n      </div>\r\n   </div>\r\n   <div className=\"mainLoadingMSG\">\r\n         <Box sx={{ display: 'flex'}}>\r\n      <CircularProgress size=\"200px\" />\r\n    </Box>\r\n   </div>\r\n\r\n    <div>\r\n   <Footer> </Footer>\r\n   </div>\r\n  </div>\r\n  );\r\n\r\n}\r\nexport default LoadingDet","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport LoginPg from './pages/LoginPg/LoginPg.js';\r\nimport CreateUser from './pages/CreateUser/CreateUser.js';\r\nimport Questionnaire from './pages/questionnaire/questionnaire.js';\r\nimport Dashboard from './pages/Dashboard/Dashboard.js';\r\nimport PortfolioSum from './pages/PortfolioSum/PortfolioSum.js';\r\nimport Editquestionnaire from './pages/editquestionnaire/editquestionnaire.js';\r\nimport LoadingDet from './pages/LoadingDet/LoadingDet.js';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Router>\r\n    <Routes>\r\n      {/* This defines all routes/pages */}\r\n      <Route path=\"/\" exact element={<LoginPg />} />\r\n      <Route path=\"/createUser\" exact element={<CreateUser />} />\r\n      <Route path=\"/question\" exact element={<Questionnaire />} />\r\n      <Route path=\"/editquestion\" exact element={<Editquestionnaire />} />\r\n      <Route path=\"/loading\" exact element={<LoadingDet />} />\r\n      <Route path=\"/dashboard\" exact element={<Dashboard />} />\r\n      <Route path=\"/portfoliosum\" exact element={<PortfolioSum/>} />\r\n    </Routes>\r\n  </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}